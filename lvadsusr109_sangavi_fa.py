# -*- coding: utf-8 -*-
"""LVADSUSR109-Sangavi-FA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A4-ZZt7TAEFRFRMuiBKyLKjqrUC3RxzI
"""

import seaborn as sns
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import random
from scipy import stats
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import MinMaxScaler
import statistics
from datetime import datetime, timedelta

# 1 LOAD DATASET
# importing the dataset in csv and xlsx
df=pd.read_csv('/content/drive/MyDrive/Final/Walmart_Dataset Python_Final_Assessment.csv')
print(df)
data=df
'''
df=pd.read_excel('/content/drive/MyDrive/Final/Walmart_Dataset Python_Final_Assessment.xlsx')
print(df)
'''

df.info() # Fetching basic info from the dataset

# 2 DATA CLEANING
# check for count of any duplicate records
df.duplicated().sum()
# check any records for null values
print(df.isnull()) # if any value present it will be true
# checking for the categorical labels that can be encoded
encoder=LabelEncoder()
df['Category']=encoder.fit_transform(df['Category']) # encoding the labels to numeric for Easy interpretation
print(df['Category'])

# 3 DESCRIPTIVE STATISTICS
df.describe()

print(df.head(2))
print(df.tail(2))

# 4 DATA VISUALIZATION
# Can use sales and profit in scatter plot to visualize the impact
sns.scatterplot(x=df['Sales'],y=df['Profit'])
plt.xlabel('Sales')
plt.ylabel('Profit')
plt.title("Sales and Profit")
plt.legend()
plt.grid(True)

sns.pairplot(data) # Before encoding the category labels

# Seaborn pairplot gives insights in matrix representation of comparision between the Sales,Quantity and Profit
sns.pairplot(df)

# Using Histogram
plt.hist(df['Sales'], bins=50, color='purple', edgecolor='blue')
plt.xlabel('Sales')
plt.ylabel('Frequency')
plt.title('Sales Distribution')
plt.grid(True)
plt.show()

#5
# Identify the correlation between the variables
corr=df.corr()
print(corr)
# Visualize using Seaborn heatmap
sns.heatmap(corr,annot=True,xticklabels=['Sales','Qunatity','Profit'],yticklabels=['Sales','Qunatity','Profit'])# adding the label value for correlation

#6 ANOMALY DETECTION
numerical_stats = df.describe()
print(numerical_stats)
sns.boxplot(x=df['Sales'])
# We can normalize the sales value
scaler=MinMaxScaler()
mean_sale=data['Sales'].mean()
for i in data['Sales']:
  data['Sales']=(i-mean_sale)/stats.zscore(data['Sales'])

# After normalizing using Zscore normalization
# Other normalization line Minmaxscaler etc can be used for the normalization purpose.
sns.boxplot(x=data['Sales'])

#7 DATA DISCOVERY
# Sales profit trends over year
plt.plot(df['Sales'])
plt.plot(df['Profit'])
plt.show()
product_name=df.groupby(['Order Date','Product Name'])['Sales'].max().nlargest(1)
print(product_name)

#Customer Analysis
sales_by_date = df.groupby(['Order Date','EmailID'])['Sales'].sum()
print(sales_by_date.head(5))
# Based on the order date and total amount top 5 customer can be indentified using gropby columns and displaying it with head
top_customers = df.groupby('EmailID')['Sales'].sum().nlargest(5)
print(top_customers)

# Converting the dates to datetime format
df['Order Date']=pd.to_datetime(df['Order Date'])
df['Ship Date']=pd.to_datetime(df['Ship Date'])

# Finding the average time difference between the orders
repeat_purchase = df.groupby('EmailID')['Order Date'].diff().mean()
print(repeat_purchase)

# Comprehensive Analytics:

# Checking for the differnce in the date of order and shipping.
differ_ship = df['Ship Date'].diff()
differ_order= df['Order Date'].diff()
print(abs(differ_order-differ_ship))

"""1)Insights

1) The Shipping date can be made sooner in order to have a efficient supply chain.

2)Based on the year on year analysis we can clearly see at certain period sales goes high and we need to ensure that OOS(Out Of Stock) for the product should not exist.

2)Insights

Based on the product and category distributed over the geographical area can help in defining the kind of product ,marketing and promotions to be applied in that area.This helps in increasing the sales

Quantity of purchase also plays an important role in making the customer to trust the product.

Local market analysis should also be a factor for the better product sales.

3)Insights

Based on the interval between the order dates could help in boosting the sales.In case Accessories or Some daily products it should be purchased at a regular interval according to the usage.
Based on the buying pattern it helps in suggesting the product as a reminder could increase the chance of having the customer to buy the product.

Then giving some occasional discounts and coupons can help the Customer to increase the trust and loyalty towards the product.So they will not move to other brand.
"""